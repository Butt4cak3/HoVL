{"version":3,"sources":["../../src/scene.ts","../../src/vector.ts","../../src/shapes.ts","main.ts"],"names":[],"mappings":"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","file":"f96e51eccd4577cc0442c4873fbd1eaa.map","sourcesContent":["import { Shape } from \"hovl/shapes\";\n\nexport interface Viewport {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  scale: number;\n}\n\nexport abstract class Scene {\n  public readonly context: CanvasRenderingContext2D;\n\n  protected shapes: Shape[] = [];\n\n  private readonly canvas: HTMLCanvasElement;\n  private viewport: Viewport;\n  private aspectRatio: number;\n\n  public get width(): number {\n    return this.canvas.width;\n  }\n\n  public get height(): number {\n    return this.canvas.height;\n  }\n\n  constructor(canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    this.aspectRatio = this.canvas.width / this.canvas.height;\n    this.viewport = { x: 0, y: 0, width: 0, height: 0, scale: 1 };\n\n    const ctx = canvas.getContext(\"2d\");\n    if (ctx) {\n      this.context = ctx;\n    } else {\n      throw new Error(\"No canvas found\");\n    }\n\n    this.setViewport(0, 0, 1);\n  }\n\n  public setCanvasSize(width: number, height: number) {\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.aspectRatio = this.canvas.width / this.canvas.height;\n\n    this.setViewport(this.viewport.x, this.viewport.y, this.viewport.width);\n  }\n\n  public setViewport(x: number, y: number, width: number) {\n    const scale = this.canvas.width / width;\n    const height = width / this.aspectRatio;\n\n    this.viewport = { x, y, width, height, scale };\n    this.context.setTransform(scale, 0, 0, scale, -x * scale, -y * scale);\n  }\n\n  public start(): void {\n    const start = performance.now();\n    let last = start;\n\n    const frame = (now: number) => {\n      const time = now - start;\n      const dt = now - last;\n      last = now;\n      this.frame(time, dt);\n      window.requestAnimationFrame(frame);\n    };\n\n    window.requestAnimationFrame(frame);\n  }\n\n  public clear(): void {\n    this.context.clearRect(0, 0, this.width, this.height);\n  }\n\n  private frame(time: number, dt: number): void {\n    this.update(time / 1000, dt / 1000);\n    this.render();\n  }\n\n  protected abstract update(time: number, dt: number): void;\n\n  protected render(): void {\n    this.clear();\n\n    for (const shape of this.shapes) {\n      shape.draw(this.context);\n    }\n  }\n}\n","export interface Vector {\n  x: number;\n  y: number;\n}\n\nexport function Vector(value: Vector | number): Vector;\nexport function Vector(x: number, y: number): Vector;\nexport function Vector(x: number | Vector, y?: number): Vector {\n  if (typeof x === \"number\") {\n    return { x, y: y != null ? y : x };\n  } else {\n    return { ...x };\n  }\n}\n\nexport function dot(lhs: Vector, rhs: Vector): number {\n  return lhs.x * rhs.x + lhs.y * rhs.y;\n}\n\nexport function length(v: Vector): number {\n  return Math.sqrt(dot(v, v));\n}\n\nexport function add(lhs: Vector, rhs: Vector): Vector {\n  return { x: lhs.x + rhs.x, y: lhs.y + rhs.y };\n}\n\nexport function sub(lhs: Vector, rhs: Vector): Vector {\n  return { x: lhs.x - rhs.x, y: lhs.y - rhs.y };\n}\n\nexport function mul(lhs: Vector, rhs: number): Vector {\n  return { x: lhs.x * rhs, y: lhs.y * rhs };\n}\n\nexport function div(lhs: Vector, rhs: number): Vector {\n  return { x: lhs.x / rhs, y: lhs.y / rhs };\n}\n","import { Vector } from \"hovl/vector\";\n\nexport interface Trs {\n  translate: Vector;\n  rotate: number;\n  scale: Vector | number;\n}\n\nexport abstract class Shape {\n  public color: string;\n\n  public translate: Vector;\n  public rotate: number;\n  public scale: Vector;\n\n  constructor(\n    color: string,\n    { translate = Vector(0, 0), rotate = 0, scale = Vector(1, 1) }: Partial<Trs>\n  ) {\n    this.color = color;\n\n    this.translate = Vector(translate);\n    this.rotate = rotate;\n    this.scale = Vector(scale);\n  }\n\n  public draw(context: CanvasRenderingContext2D): void {\n    context.save();\n    context.translate(this.translate.x, this.translate.y);\n    context.rotate(this.rotate);\n    context.scale(this.scale.x, this.scale.y);\n    this.drawInternal(context);\n    context.restore();\n  }\n\n  protected abstract drawInternal(context: CanvasRenderingContext2D): void;\n}\n\nexport class Circle extends Shape {\n  public radius: number;\n\n  constructor(radius: number, color: string, trs: Partial<Trs>) {\n    super(color, trs);\n    this.radius = radius;\n  }\n\n  protected drawInternal(context: CanvasRenderingContext2D): void {\n    context.beginPath();\n    context.arc(0, 0, this.radius, 0, Math.PI * 2);\n    context.fillStyle = this.color;\n    context.fill();\n  }\n}\n\nexport class Line extends Shape {\n  public a: Vector;\n  public b: Vector;\n  public width: number;\n\n  constructor(a: Vector, b: Vector, width: number, color: string, trs: Partial<Trs>) {\n    super(color, trs);\n    this.a = Vector(a);\n    this.b = Vector(b);\n    this.width = width;\n  }\n\n  protected drawInternal(context: CanvasRenderingContext2D): void {\n    context.beginPath();\n    context.strokeStyle = this.color;\n    context.lineWidth = this.width;\n    context.moveTo(this.a.x, this.a.y);\n    context.lineTo(this.b.x, this.b.y);\n    context.stroke();\n  }\n}\n","import { Scene } from \"hovl/scene\";\nimport { Line, Circle } from \"hovl/shapes\";\nimport { Vector, add } from \"hovl/vector\";\n\nconst BOX_X = 1;\nconst BOX_Y = 1;\nconst BOX_WIDTH = 10;\nconst BOX_HEIGHT = 10;\nconst GRAVITY = 9.81;\n\n// Velocity Verlet\nfunction verletPos(x: number, v: number, a: number, dt: number): number {\n  return x + v * dt + 0.5 * a * dt * dt;\n}\n\nfunction verletVel(v: number, a: number, dt: number): number {\n  return v + a * dt;\n}\n\n// We need a circle that knows its velocity and bounciness\nclass Ball extends Circle {\n  public vel: Vector = Vector(0, 0);\n  public bounciness = 0.8;\n}\n\nclass VerletScene extends Scene {\n  private ball: Ball;\n\n  constructor(canvas: HTMLCanvasElement) {\n    super(canvas);\n\n    // These lines create a bounding box that the ball will bounce off of\n    this.shapes.push(\n      new Line(Vector(0, 0), Vector(BOX_WIDTH, 0), 0.1, \"#000000\", {\n        translate: Vector(BOX_X, BOX_Y)\n      }),\n      new Line(Vector(0, 0), Vector(BOX_WIDTH, 0), 0.1, \"#000000\", {\n        translate: Vector(BOX_X, BOX_Y + BOX_HEIGHT)\n      }),\n      new Line(Vector(0, 0), Vector(0, BOX_HEIGHT), 0.1, \"#000000\", {\n        translate: Vector(BOX_X, BOX_Y)\n      }),\n      new Line(Vector(0, 0), Vector(0, BOX_HEIGHT), 0.1, \"#000000\", {\n        translate: Vector(BOX_X + BOX_WIDTH, BOX_Y)\n      })\n    );\n\n    // Create a ball a bit above the center of the box\n    this.ball = new Ball(0.5, \"#00AA77\", {\n      translate: Vector(BOX_X + (BOX_WIDTH / 2), BOX_Y + 2)\n    });\n\n    // Give it a random starting velocity\n    this.ball.vel = add(this.ball.vel, Vector(Math.random() * 40 - 20, Math.random() * 40 - 20));\n\n    // Add the ball to the shapes so that it gets drawn\n    this.shapes.push(this.ball);\n  }\n\n  protected update(_: number, dt: number): void {\n    const ball = this.ball;\n\n    // Calculate the new position\n    ball.translate.x = verletPos(ball.translate.x, ball.vel.x, 0, dt);\n    ball.translate.y = verletPos(ball.translate.y, ball.vel.y, GRAVITY, dt);\n\n    // Calculate the new velocity\n    ball.vel.x = verletVel(ball.vel.x, 0, dt);\n    ball.vel.y = verletVel(ball.vel.y, GRAVITY, dt);\n\n    // These are the coordinates at which the ball hits a wall\n    const boundTop = BOX_Y + ball.radius;\n    const boundBottom = BOX_Y + BOX_HEIGHT - ball.radius;\n    const boundLeft = BOX_X + ball.radius;\n    const boundRight = BOX_X + BOX_WIDTH - ball.radius;\n\n    // Check for and resolve collisions\n    if (ball.translate.y > boundBottom) {\n      ball.translate.y = boundBottom;\n      ball.vel.y *= -ball.bounciness;\n    } else if (ball.translate.y < boundTop) {\n      ball.translate.y = boundTop;\n      ball.vel.y *= -ball.bounciness;\n    }\n\n    if (ball.translate.x > boundRight) {\n      ball.translate.x = boundRight;\n      ball.vel.x *= -ball.bounciness;\n    } else if (ball.translate.x < boundLeft) {\n      ball.translate.x = boundLeft;\n      ball.vel.x *= -ball.bounciness;\n    }\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n  const scene = new VerletScene(canvas);\n\n  scene.setCanvasSize(600, 600);\n  scene.setViewport(BOX_X - 1, BOX_Y - 1, BOX_WIDTH + 2);\n\n  scene.start();\n});\n"]}